{"ast":null,"code":"import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport Alert from './Alert';\nimport { alert, clear } from './util';\n\nvar wrapProps = function wrapProps(props) {\n  var finalProps = props;\n\n  if ((typeof props === 'undefined' ? 'undefined' : _typeof(props)) !== 'object') {\n    finalProps = {\n      message: props\n    };\n  }\n\n  return _extends({}, finalProps);\n};\n\nAlert.success = function (props) {\n  for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  return alert.apply(undefined, [_extends({\n    type: 'success'\n  }, wrapProps(props))].concat(_toConsumableArray(rest)));\n};\n\nAlert.warning = function (props) {\n  for (var _len2 = arguments.length, rest = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    rest[_key2 - 1] = arguments[_key2];\n  }\n\n  return alert.apply(undefined, [_extends({\n    type: 'warning'\n  }, wrapProps(props))].concat(_toConsumableArray(rest)));\n};\n\nAlert.error = function (props) {\n  for (var _len3 = arguments.length, rest = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    rest[_key3 - 1] = arguments[_key3];\n  }\n\n  return alert.apply(undefined, [_extends({\n    type: 'danger'\n  }, wrapProps(props))].concat(_toConsumableArray(rest)));\n};\n\nAlert.info = function (props) {\n  for (var _len4 = arguments.length, rest = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    rest[_key4 - 1] = arguments[_key4];\n  }\n\n  return alert.apply(undefined, [_extends({\n    type: 'info'\n  }, wrapProps(props))].concat(_toConsumableArray(rest)));\n};\n\nAlert.clear = function () {\n  return clear();\n};\n\nexport default Alert;","map":null,"metadata":{},"sourceType":"module"}