{"ast":null,"code":"import _objectSpread from \"/Users/lwang9/Work/workspace1/react-lifecycle/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/lwang9/Work/workspace1/react-lifecycle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lwang9/Work/workspace1/react-lifecycle/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lwang9/Work/workspace1/react-lifecycle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lwang9/Work/workspace1/react-lifecycle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lwang9/Work/workspace1/react-lifecycle/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lwang9/Work/workspace1/react-lifecycle/src/components/LifeCycle/Clock.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport Alert from 'react-aaui/es/alert';\nimport './Clock.less';\n\nvar Clock =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Clock, _React$Component);\n\n  function Clock(props) {\n    var _this;\n\n    _classCallCheck(this, Clock);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Clock).call(this, props));\n\n    _this.getClock = function () {\n      var currentTime = new Date();\n      return {\n        hours: currentTime.getHours(),\n        minutes: currentTime.getMinutes(),\n        seconds: currentTime.getSeconds(),\n        ampm: currentTime.getHours() >= 12 ? \"pm\" : \"am\"\n      };\n    };\n\n    _this.setTimer = function () {\n      _this.timer = setTimeout(_this.updateClock, 1000);\n    };\n\n    _this.updateClock = function () {\n      _this.setState({\n        clock: _this.getClock(),\n        number: 2\n      });\n\n      _this.setState({\n        number: 3\n      });\n    };\n\n    _this.state = {\n      clock: _this.getClock(),\n      number: 1\n    };\n    console.log('constructor');\n    return _this;\n  } //Enable a component to update its internal state as the result of changes in props\n\n\n  _createClass(Clock, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setTimer();\n      console.log('%ccomponentDidMount', 'color:#45a162');\n    }\n    /* Only exists as a performance optimization,\n     * use PureComponent(shallow comparison of props and state)\n    */\n\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      console.log('%cshouldComponentUpdate', 'color:#ffb934');\n\n      if (nextProps.stop) {\n        return nextProps.color !== this.props.color;\n      }\n\n      return true;\n    }\n    /* Enables component to capture some information from the DOM before potentially changed,\n     * returned value as parameter of componentDidUpdate\n    */\n\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps, prevState) {\n      console.log('%cgetSnapshotBeforeUpdate', 'color:#ffb934');\n\n      if (prevProps.color !== this.props.color) {\n        return {\n          msg: \"color has been changed from \".concat(prevProps.color, \" to \").concat(this.props.color)\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (snapshot !== null) {\n        Alert.info(JSON.stringify(snapshot.msg));\n      }\n\n      this.setTimer();\n      console.log('%ccomponentDidUpdate', 'color:#45a162');\n      console.log('**************************************');\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.timer && clearTimeout(this.timer);\n      console.log('%ccomponentWillUnmount', 'color:#45a162');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          _this$state$clock = _this$state.clock,\n          hours = _this$state$clock.hours,\n          minutes = _this$state$clock.minutes,\n          seconds = _this$state$clock.seconds,\n          ampm = _this$state$clock.ampm,\n          color = _this$state.color,\n          number = _this$state.number;\n      console.log('render');\n      return React.createElement(\"div\", {\n        className: classNames('clock', color),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"\".concat(hours, \" : \").concat(minutes, \" : \").concat(seconds, \" \").concat(ampm), \" \", number);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      console.log('**************************************');\n      console.log('%cgetDerivedStateFromProps', 'color:#ffb934');\n\n      if (props.color !== state.color) {\n        return _objectSpread({}, state, {\n          color: props.color\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return Clock;\n}(React.Component);\n\nexport default Clock;","map":{"version":3,"sources":["/Users/lwang9/Work/workspace1/react-lifecycle/src/components/LifeCycle/Clock.js"],"names":["React","classNames","Alert","Clock","props","getClock","currentTime","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","setTimer","timer","setTimeout","updateClock","setState","clock","number","state","console","log","nextProps","nextState","stop","color","prevProps","prevState","msg","snapshot","info","JSON","stringify","clearTimeout","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport Alert from 'react-aaui/es/alert';\nimport './Clock.less';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clock: this.getClock(),\n      number: 1\n    }\n    console.log('constructor');\n  }\n\n  //Enable a component to update its internal state as the result of changes in props\n  static getDerivedStateFromProps(props, state) {\n    console.log('**************************************');\n    console.log('%cgetDerivedStateFromProps', 'color:#ffb934');\n    if (props.color !== state.color) {\n      return {\n        ...state,\n        color: props.color\n      }\n    }\n    return null;\n  }\n\n  componentDidMount() {\n    this.setTimer();\n    console.log('%ccomponentDidMount', 'color:#45a162');\n  }\n\n  /* Only exists as a performance optimization,\n   * use PureComponent(shallow comparison of props and state)\n  */\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('%cshouldComponentUpdate', 'color:#ffb934');\n    if (nextProps.stop) {\n      return nextProps.color !== this.props.color;\n    }\n    return true;\n  }\n\n  /* Enables component to capture some information from the DOM before potentially changed,\n   * returned value as parameter of componentDidUpdate\n  */\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log('%cgetSnapshotBeforeUpdate', 'color:#ffb934');\n    if (prevProps.color !== this.props.color) {\n      return {\n        msg: `color has been changed from ${prevProps.color} to ${this.props.color}`\n      }\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (snapshot !== null) {\n      Alert.info(JSON.stringify(snapshot.msg));\n    }\n    this.setTimer();\n    console.log('%ccomponentDidUpdate', 'color:#45a162');\n    console.log('**************************************');\n  }\n\n  componentWillUnmount() {\n    this.timer && clearTimeout(this.timer);\n    console.log('%ccomponentWillUnmount', 'color:#45a162');\n  }\n  \n\n  getClock = () => {\n    const currentTime = new Date();\n    return {\n      hours: currentTime.getHours(),\n      minutes: currentTime.getMinutes(),\n      seconds: currentTime.getSeconds(),\n      ampm: currentTime.getHours() >= 12 ? \"pm\" : \"am\"\n    };\n  }\n\n  setTimer = () => {\n    this.timer = setTimeout(this.updateClock, 1000);\n  }\n\n  updateClock = () => {\n    this.setState({\n      clock: this.getClock(),\n      number: 2\n    })\n    this.setState({\n      number: 3\n    })\n  }\n\n  render() {\n    const { clock: { hours, minutes, seconds, ampm }, color, number } = this.state;\n    console.log('render');\n    return (\n      <div className={classNames('clock', color)}>{`${hours} : ${minutes} : ${seconds} ${ampm}`} {number}</div>\n    );\n  }\n}\n\nexport default Clock;"]},"metadata":{},"sourceType":"module"}