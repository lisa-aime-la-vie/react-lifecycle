{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _Map from 'babel-runtime/core-js/map';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AlertBar from './AlertBar';\nimport { noop } from '../shared/utils';\nvar alertMap = new _Map();\n\nfunction clear() {\n  alertMap.forEach(function (_ref) {\n    var close = _ref.close;\n    return close();\n  });\n  alertMap.clear();\n}\n\nfunction alert(options, element) {\n  var props = _extends({\n    onClose: noop,\n    multiple: false,\n    inverse: true\n  }, options);\n\n  var originalOnClose = props.onClose;\n  var target = element || document.createElement('div');\n\n  if (!props.multiple) {\n    clear();\n  }\n\n  if (!element) {\n    target.className = 'global-alert-container';\n    document.body && document.body.appendChild(target);\n  }\n\n  function close() {\n    alertMap.delete(target); // Refer to https://facebook.github.io/react/docs/react-dom.html#unmountcomponentatnode\n\n    var unmountResult = ReactDOM.unmountComponentAtNode(target);\n    !element && unmountResult && target.parentNode && target.parentNode.removeChild(target);\n    originalOnClose.apply(undefined, arguments);\n  }\n\n  props.onClose = close;\n  alertMap.set(target, {\n    close: close\n  });\n  ReactDOM.render(React.createElement(AlertBar, props), target);\n  return {\n    close: close\n  };\n}\n\nexport { alert, clear };","map":null,"metadata":{},"sourceType":"module"}