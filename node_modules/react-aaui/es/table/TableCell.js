import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import { string, func, node } from 'prop-types';

import { noop } from '../shared/utils';

var TableCell = function (_PureComponent) {
  _inherits(TableCell, _PureComponent);

  function TableCell() {
    _classCallCheck(this, TableCell);

    return _possibleConstructorReturn(this, (TableCell.__proto__ || _Object$getPrototypeOf(TableCell)).apply(this, arguments));
  }

  _createClass(TableCell, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          Tag = _props.tagName,
          children = _props.children,
          onClick = _props.onClick,
          rest = _objectWithoutProperties(_props, ['className', 'tagName', 'children', 'onClick']);

      return React.createElement(
        Tag,
        _extends({ className: className }, rest, { onClick: onClick }),
        children
      );
    }
  }]);

  return TableCell;
}(PureComponent);

TableCell.propTypes = {
  className: string,
  children: node,
  tagName: string,
  onClick: func
};
TableCell.defaultProps = {
  className: '',
  tagName: 'td',
  onClick: noop
};
export default TableCell;