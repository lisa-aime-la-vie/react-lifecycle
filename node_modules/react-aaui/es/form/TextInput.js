import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import _extends from 'babel-runtime/helpers/extends';
import React, { PureComponent } from 'react';

import injectL10n from '../shared/injectL10n';

import connectForm from './connectForm';
import Input from '../Input';
import { noop, omit } from '../shared/utils';
import { FormFieldAPIPropTypes } from './types';

var propTypes = _extends({}, FormFieldAPIPropTypes);

var TextInput = function (_PureComponent) {
  _inherits(TextInput, _PureComponent);

  function TextInput() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TextInput);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TextInput.__proto__ || _Object$getPrototypeOf(TextInput)).call.apply(_ref, [this].concat(args))), _this), _this.setWrappedComponentInstance = function (input) {
      _this.input = input;
    }, _this.handleValueCommit = function () {
      var _this$props$api = _this.props.api,
          onValidate = _this$props$api.onValidate,
          setValue = _this$props$api.setValue;

      onValidate(_this.input.value && _this.input.value.trim());
      setValue(_this.input.value && _this.input.value.trim());
    }, _this.handleChange = function (e) {
      var _this$props = _this.props,
          setValue = _this$props.api.setValue,
          onChange = _this$props.onChange;


      setValue(e.target.value);
      onChange(e);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TextInput, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          placeholder = _props.placeholder,
          l10n = _props.l10n,
          className = _props.className,
          rest = _objectWithoutProperties(_props, ['placeholder', 'l10n', 'className']);

      return this.props.static ? React.createElement(
        'span',
        { tabIndex: '0', className: className },
        rest.value
      ) : React.createElement(Input, _extends({
        ref: this.setWrappedComponentInstance,
        type: 'text',
        placeholder: !!placeholder && l10n.formatMessage(placeholder) ? l10n.formatMessage(placeholder) : placeholder,
        className: className
      }, omit(rest, ['api', 'l10n', 'rules']), {
        onValueCommit: this.handleValueCommit,
        onChange: this.handleChange }));
    }
  }]);

  return TextInput;
}(PureComponent);

TextInput.displayName = 'TextInput';
TextInput.propTypes = propTypes;
TextInput.defaultProps = {
  onChange: noop
};


export default injectL10n()(connectForm()(TextInput));