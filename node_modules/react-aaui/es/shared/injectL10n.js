import _defineProperty from 'babel-runtime/helpers/defineProperty';
import _extends from 'babel-runtime/helpers/extends';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import _Object$keys from 'babel-runtime/core-js/object/keys';
import React, { PureComponent } from 'react';

import L10n from './L10n';
import getDisplayName from './getDisplayName';
import { aauiL10nConfigPropTypes, aauiL10nFuncPropTypes, aauiL10nShape } from './types';
import { omit } from './utils';

var staticL10n = new L10n();
var isStatelessComponent = function isStatelessComponent(Component) {
  return !Component.prototype || !Component.prototype.render;
};

export default function injectL10n() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var aauiL10nConfigPropKeys = _Object$keys(aauiL10nConfigPropTypes);
  var aauiL10nFuncPropKeys = _Object$keys(aauiL10nFuncPropTypes);

  var aauiL10nName = 'aauiL10n';
  var _options$l10nName = options.l10nName,
      l10nName = _options$l10nName === undefined ? 'l10n' : _options$l10nName;


  return function wrapWithInjectL10n(WrappedComponent) {
    var InjectL10n = function (_PureComponent) {
      _inherits(InjectL10n, _PureComponent);

      function InjectL10n(props) {
        _classCallCheck(this, InjectL10n);

        var _this = _possibleConstructorReturn(this, (InjectL10n.__proto__ || _Object$getPrototypeOf(InjectL10n)).call(this, props));

        _this.getBoundL10n = function () {
          var l10n = _this.context[aauiL10nName] || staticL10n;
          var boundFuncs = aauiL10nFuncPropKeys.reduce(function (funcs, name) {
            return _extends({}, funcs, _defineProperty({}, name, l10n[name].bind(l10n)));
          }, {});
          var boundConfig = aauiL10nConfigPropKeys.reduce(function (config, name) {
            return _extends({}, config, _defineProperty({}, name, l10n[name]));
          }, {});

          return _defineProperty({}, l10nName, _extends({}, l10n, boundConfig, boundFuncs));
        };

        _this.getWrappedComponent = function () {
          return _this._instance;
        };

        _this.unsubscribe = null;
        return _this;
      }

      _createClass(InjectL10n, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
          var _this2 = this;

          if (this.context[aauiL10nName]) {
            this.unsubscribe = this.context[aauiL10nName].subscribe(function () {
              return _this2.forceUpdate();
            });
          }
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          if (this.unsubscribe) {
            this.unsubscribe();
          }

          this.unsubscribe = null;
        }
      }, {
        key: 'render',
        value: function render() {
          var _this3 = this;

          var finalProps = omit(this.props, [aauiL10nName]);

          return isStatelessComponent(WrappedComponent) ? React.createElement(WrappedComponent, _extends({}, finalProps, this.getBoundL10n())) : React.createElement(WrappedComponent, _extends({
            ref: function ref(instance) {
              _this3._instance = instance;
            }
          }, finalProps, this.getBoundL10n()));
        }
      }]);

      return InjectL10n;
    }(PureComponent);

    InjectL10n.displayName = 'InjectL10n(' + getDisplayName(WrappedComponent) + ')';
    InjectL10n.contextTypes = { aauiL10n: aauiL10nShape };


    return InjectL10n;
  };
}