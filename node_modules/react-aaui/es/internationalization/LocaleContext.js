import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import * as React from 'react';

var LocaleContext = React.createContext({});

var getLocale = function getLocale(locales) {
  return function (id) {
    return locales && id && locales[id] || id;
  };
};

var identity = function identity(v) {
  return v;
};

export function Provider(_ref) {
  var locales = _ref.locales,
      children = _ref.children,
      rest = _objectWithoutProperties(_ref, ['locales', 'children']);

  return React.createElement(
    LocaleContext.Provider,
    { value: _extends({ locales: locales, i18n: getLocale(locales) }, rest) },
    children
  );
}

export function consumer(Comp) {
  return function (_ref2) {
    var id = _ref2.id;
    return React.createElement(
      LocaleContext.Consumer,
      null,
      function (_ref3) {
        var _ref3$locales = _ref3.locales,
            locales = _ref3$locales === undefined ? {} : _ref3$locales,
            _ref3$i18n = _ref3.i18n,
            i18n = _ref3$i18n === undefined ? identity : _ref3$i18n;

        return id ? React.createElement(Comp, { value: i18n(id) }) : null;
      }
    );
  };
}

export function withI18n(Comp) {
  return function (props) {
    return React.createElement(
      LocaleContext.Consumer,
      null,
      function (_ref4) {
        var _ref4$i18n = _ref4.i18n,
            i18n = _ref4$i18n === undefined ? identity : _ref4$i18n;
        return React.createElement(Comp, _extends({ i18n: i18n }, props));
      }
    );
  };
}

var Consumer = LocaleContext.Consumer;
export { Consumer };