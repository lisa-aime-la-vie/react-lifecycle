import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import { string, object, oneOf, node } from 'prop-types';

var Label = function (_PureComponent) {
  _inherits(Label, _PureComponent);

  function Label() {
    _classCallCheck(this, Label);

    return _possibleConstructorReturn(this, (Label.__proto__ || _Object$getPrototypeOf(Label)).apply(this, arguments));
  }

  _createClass(Label, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          style = _props.style,
          type = _props.type,
          children = _props.children,
          rest = _objectWithoutProperties(_props, ['className', 'style', 'type', 'children']);

      return React.createElement(
        'span',
        _extends({}, rest, {
          className: 'label label-' + type + ' ' + (className || ''),
          tabIndex: 0,
          style: style }),
        children
      );
    }
  }]);

  return Label;
}(PureComponent);

Label.displayName = 'AUILabel';
Label.propTypes = {
  className: string,
  style: object, // eslint-disable-line
  type: oneOf(['success', 'warning', 'danger', 'info']).isRequired,
  children: node
};
Label.defaultProps = {
  type: 'info'
};
export default Label;