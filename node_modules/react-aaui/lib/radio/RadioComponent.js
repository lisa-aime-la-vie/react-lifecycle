'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _defineProperties = require('babel-runtime/core-js/object/define-properties');

var _defineProperties2 = _interopRequireDefault(_defineProperties);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _utils = require('../shared/utils');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Radio = function (_React$PureComponent) {
  (0, _inherits3.default)(Radio, _React$PureComponent);

  function Radio(props) {
    (0, _classCallCheck3.default)(this, Radio);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Radio.__proto__ || (0, _getPrototypeOf2.default)(Radio)).call(this, props));

    _initialiseProps.call(_this);

    var checked = 'checked' in props ? props.checked : props.defaultChecked;

    _this.state = {
      checked: !!checked
    };
    return _this;
  }

  (0, _createClass3.default)(Radio, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      (0, _defineProperties2.default)(this, {
        checked: {
          get: function get() {
            return this.input.checked;
          },
          set: function set(v) {
            this.input.checked = !!v;
            this.setState({
              checked: !!v
            });
          }
        }
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if ('checked' in nextProps) {
        this.setState({
          checked: !!nextProps.checked
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      /* eslint-disable no-unused-vars */
      var _props = this.props,
          size = _props.size,
          children = _props.children,
          className = _props.className,
          style = _props.style,
          disabled = _props.disabled,
          defaultChecked = _props.defaultChecked,
          ariaLabelId = _props.ariaLabelId,
          rest = (0, _objectWithoutProperties3.default)(_props, ['size', 'children', 'className', 'style', 'disabled', 'defaultChecked', 'ariaLabelId']);
      var checked = this.state.checked;

      var radioWrapperClasses = (0, _classnames2.default)({
        'radio-wrapper': true
      }, className);
      var radioClasses = (0, _classnames2.default)((0, _defineProperty3.default)({
        radio: true,
        'radio--checked': checked,
        'radio--disabled': disabled
      }, 'radio--' + size, size));

      /* eslint-disable jsx-a11y/label-has-for */
      return React.createElement(
        'label',
        { className: radioWrapperClasses, style: style },
        React.createElement(
          'span',
          { className: radioClasses },
          React.createElement('input', (0, _extends3.default)({
            ref: this.setWrappedComponentInstance,
            className: 'radio__input',
            disabled: disabled,
            type: 'radio',
            'aria-hidden': true,
            'aria-labelledby': ariaLabelId
          }, rest, {
            checked: checked,
            onChange: this.handleChange })),
          React.createElement('span', {
            className: 'radio__inner',
            role: 'radio',
            'aria-disabled': disabled,
            'aria-checked': checked }),
          React.createElement(
            'span',
            { id: ariaLabelId },
            children
          )
        )
      );
    }
  }]);
  return Radio;
}(React.PureComponent);

Radio.defaultProps = {
  size: '',
  defaultChecked: false,
  onChange: _utils.identity,
  ariaLabelId: undefined
};

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this.setWrappedComponentInstance = function (input) {
    _this2.input = input;
  };

  this.triggerOnChange = function (e) {
    var onChange = _this2.props.onChange;
    var checked = e.target.checked;


    if (!('checked' in _this2.props)) {
      _this2.setState({
        checked: checked
      });
    }

    // If you want to access the event properties in an asynchronous way,
    // you should call `event.persist()`` on the event,
    // which will remove the synthetic event from the pool
    // and allow references to the event to be retained by user code.
    e.persist && e.persist();

    onChange(e);
  };

  this.handleChange = function (e) {
    var disabled = _this2.props.disabled;


    if (disabled) {
      return;
    }

    _this2.triggerOnChange(e);
  };
};

exports.default = Radio;