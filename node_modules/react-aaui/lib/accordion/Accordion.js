'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _AccordionPanel = require('./AccordionPanel');

var _AccordionPanel2 = _interopRequireDefault(_AccordionPanel);

var _keyCodes = require('../shared/keyCodes');

var _keyCodes2 = _interopRequireDefault(_keyCodes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Accordion = function (_React$PureComponent) {
  (0, _inherits3.default)(Accordion, _React$PureComponent);

  function Accordion() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Accordion);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Accordion.__proto__ || (0, _getPrototypeOf2.default)(Accordion)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      status: {}
    }, _this.setStatus = function (key, active) {
      var status = (0, _extends3.default)({}, _this.state.status);
      if (_this.props.multiSelectable) {
        status[key] = active;
      } else {
        React.Children.forEach(_this.props.children, function (child, k) {
          status[k] = false;
        });
        status[key] = active;
      }
      _this.setState({
        status: status
      });
    }, _this.handleInitChildren = function (index, children) {
      if (!_this._focusableChildren) {
        _this._focusableChildren = [];
      }
      if (children) {
        _this._focusableChildren = [].concat((0, _toConsumableArray3.default)(_this._focusableChildren), [children]);
      } else {
        _this._focusableChildren = [].concat((0, _toConsumableArray3.default)(_this._focusableChildren));
      }
    }, _this.handleChildChangeFocus = function (index, active, keyCode, children, disabled) {
      var currentIndex = _this._focusableChildren.indexOf(children);
      var maxIndex = _this._focusableChildren.length - 1;

      switch (keyCode) {
        case _keyCodes2.default.ENTER:
        case _keyCodes2.default.SPACE:
          if (!disabled) {
            _this.setStatus(index, active);
          }
          break;
        case _keyCodes2.default.DOWNARROW:
          children.blur();
          _this._focusableChildren[currentIndex + 1 >= maxIndex ? maxIndex : currentIndex + 1].focus();
          break;
        case _keyCodes2.default.UPARROW:
          children.blur();
          _this._focusableChildren[currentIndex - 1 <= 0 ? 0 : currentIndex - 1].focus();
          break;
        default:
          break;
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Accordion, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var status = this.state.status;

      var items = [];

      React.Children.map(this.props.children, function (child, key) {
        var item = React.cloneElement(child, {
          key: key,
          index: key,
          active: status[key] !== undefined ? status[key] : child.props.active,
          transition: _this2.props.transition,
          onInitChildren: _this2.handleInitChildren,
          setStatus: _this2.setStatus,
          onChangeFocus: _this2.handleChildChangeFocus
        });

        items.push(item);
      });
      return React.createElement(
        'div',
        { className: 'accordion-group ' + (this.props.className || '') },
        items
      );
    }
  }]);
  return Accordion;
}(React.PureComponent);

Accordion.defaultProps = {
  className: '',
  multiSelectable: false,
  transition: 'height 0.2s ease'
};


Accordion.Panel = _AccordionPanel2.default;

exports.default = Accordion;