'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

exports.default = Row;

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultProps = {
  fluid: false,
  gutter: true,
  align: 'start',
  justify: 'start',
  style: {}
};

function Row(props) {
  var _classNames;

  var fluid = props.fluid,
      justify = props.justify,
      align = props.align,
      className = props.className,
      gutter = props.gutter,
      style = props.style,
      children = props.children,
      rest = (0, _objectWithoutProperties3.default)(props, ['fluid', 'justify', 'align', 'className', 'gutter', 'style', 'children']);

  var justifyPrefix = justify === 'between' || justify === 'around' ? 'space-' + justify : justify;

  var boolGutter = typeof gutter === 'boolean';
  var classes = (0, _classnames2.default)((_classNames = {
    row: !fluid,
    'row-fluid': fluid,
    'row-gutter': boolGutter && !!gutter
  }, (0, _defineProperty3.default)(_classNames, 'row-align-' + align, align), (0, _defineProperty3.default)(_classNames, 'row-justify-' + justifyPrefix, justify), _classNames), className);

  // prettier-ignore
  var rowStyle = !boolGutter && typeof gutter === 'number' && gutter > 0 ? (0, _extends3.default)({
    marginLeft: gutter / -2,
    marginRight: gutter / -2
  }, style) : style;
  var cols = React.Children.map(children, function (col) {
    if (!boolGutter && typeof gutter === 'number' && col && col.props && gutter > 0) {
      return React.cloneElement(col, {
        style: (0, _extends3.default)({
          paddingLeft: gutter / 2,
          paddingRight: gutter / 2
        }, col.props.style)
      });
    }
    return col;
  });

  return React.createElement(
    'div',
    (0, _extends3.default)({ className: classes, style: rowStyle }, rest),
    cols
  );
}

Row.defaultProps = defaultProps;