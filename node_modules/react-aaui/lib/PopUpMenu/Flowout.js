'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Flowout = function (_React$PureComponent) {
  (0, _inherits3.default)(Flowout, _React$PureComponent);

  function Flowout() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Flowout);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Flowout.__proto__ || (0, _getPrototypeOf2.default)(Flowout)).call.apply(_ref, [this].concat(args))), _this), _this.componentDidUpdate = function (_ref2) {
      var shown = _ref2.shown;

      if (shown !== _this.props.shown) {
        if (_this.props.shown) {
          _this.fixBody();
        } else {
          _this.unfixBody();
        }
      }
    }, _this.fixBody = function () {
      if (document.body && document.body.style) {
        var bodyStyles = document.body.style;
        var documentClientWidth = document.documentElement && document.documentElement.clientWidth;
        var scrollbarWidth = documentClientWidth && window.innerWidth - documentClientWidth;
        _this.bodyOverflowX = bodyStyles.overflowX;
        _this.bodyOverflowY = bodyStyles.overflowY;
        _this.bodyPaddingRight = bodyStyles.paddingRight;
        _this.bodyPosition = bodyStyles.position;
        _this.windowScrollY = window.scrollY;
        _this.bodyTop = bodyStyles.top;
        _this.bodyWidth = bodyStyles.width;
        /* istanbul ignore else */
        if (scrollbarWidth && scrollbarWidth > 0) {
          var _getComputedStyle = getComputedStyle(document.body),
              paddingRight = _getComputedStyle.paddingRight;

          bodyStyles.paddingRight = parseInt(paddingRight, 10) + parseInt(scrollbarWidth, 0) + 'px';
          if (_this.root) {
            _this.root.style.paddingRight = bodyStyles.paddingRight;
          }
        }
        bodyStyles.overflowX = 'hidden';
        bodyStyles.overflowY = 'hidden';
        bodyStyles.position = 'fixed';
        bodyStyles.top = '-' + _this.windowScrollY + 'px';
        bodyStyles.width = '100vw';
      }
    }, _this.unfixBody = function () {
      if (document.body && document.body.style) {
        var bodyStyles = document.body.style;
        bodyStyles.overflowX = _this.bodyOverflowX;
        bodyStyles.overflowY = _this.bodyOverflowY;
        bodyStyles.paddingRight = _this.bodyPaddingRight;
        if (_this.root) {
          _this.root.style.paddingRight = '';
        }
        bodyStyles.position = _this.bodyPosition;
        bodyStyles.top = _this.bodyTop;
        bodyStyles.width = _this.bodyWidth;
        window.scrollTo(0, _this.windowScrollY);
      }
    }, _this.bindRootRef = function (ref) {
      _this.root = ref;
    }, _this.renderCloseIcon = function (showIcon, toggleFlowOut) {
      return showIcon ? React.createElement('i', {
        className: 'icon-close-thin header--tablet__topbar-nav',
        onClick: toggleFlowOut }) : React.createElement('span', { className: 'flow-out__place-holder' });
    }, _this.render = function () {
      var _this$props = _this.props,
          shown = _this$props.shown,
          children = _this$props.children,
          toggleFlowOut = _this$props.toggleFlowOut,
          direction = _this$props.direction,
          renderMenuHeader = _this$props.renderMenuHeader,
          rest = (0, _objectWithoutProperties3.default)(_this$props, ['shown', 'children', 'toggleFlowOut', 'direction', 'renderMenuHeader']);

      var classes = (0, _classnames2.default)({
        flowout: true,
        shown: shown
      }, 'header--tablet__aside');
      var iconFloatLeft = direction === 'left';

      return React.createElement(
        'div',
        (0, _extends3.default)({ className: classes, ref: _this.bindRootRef, role: 'dialog' }, rest),
        React.createElement(
          'div',
          { className: 'flow-out__inner-wrapper' },
          React.createElement(
            'div',
            { className: 'flow-out__inner-header' },
            _this.renderCloseIcon(iconFloatLeft, toggleFlowOut),
            renderMenuHeader && renderMenuHeader(),
            _this.renderCloseIcon(!iconFloatLeft, toggleFlowOut)
          ),
          children
        )
      );
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Flowout, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.unfixBody();
    }
  }]);
  return Flowout;
}(React.PureComponent);

Flowout.displayName = 'AUIFlowout';
Flowout.defaultProps = {
  shown: false
};
exports.default = Flowout;