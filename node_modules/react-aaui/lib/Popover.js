'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('./Popover.less');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HIDDEN_POSITION = { left: '-2000px', top: '-2000px' };

var propTypes = {
  className: _propTypes.string,
  style: _propTypes.object,
  direction: (0, _propTypes.oneOf)(['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw']).isRequired,
  theme: (0, _propTypes.oneOf)(['', 'dark', 'light']),
  children: _propTypes.node,
  ariaLabelText: _propTypes.string
};

var defaultProps = {
  direction: 'e',
  theme: 'light',
  ariaLabelText: undefined
};

var triggerStyle = {
  position: 'absolute',
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  zIndex: 9
};

var getPopoverPosition = function getPopoverPosition(_ref) {
  var top = _ref.top,
      right = _ref.right,
      bottom = _ref.bottom,
      left = _ref.left,
      scrollX = _ref.scrollX,
      scrollY = _ref.scrollY,
      direction = _ref.direction;

  var halfWidth = (right - left) / 2;
  var halfHeight = (bottom - top) / 2;
  var arrowHeight = 12;
  var arrowWidth = 30;
  var sTop = function sTop() {
    return bottom + arrowHeight + 'px';
  };
  var nTop = function nTop() {
    return scrollY + top - arrowHeight + 'px';
  };
  var nsLeft = function nsLeft() {
    return scrollX + left + halfWidth + 'px';
  };
  var ewTop = function ewTop() {
    return scrollY + top + halfHeight + 'px';
  };
  var sneLeft = function sneLeft() {
    return scrollX + left + halfWidth - arrowWidth + 'px';
  };
  var nswLeft = function nswLeft() {
    return scrollX + left + halfWidth + arrowWidth + 'px';
  };
  var eLeft = function eLeft() {
    return scrollX + right + arrowHeight + 'px';
  };
  var wLeft = function wLeft() {
    return scrollX + left - arrowHeight + 'px';
  };

  var positions = {
    n: function n() {
      return { left: nsLeft(), top: nTop() };
    },
    ne: function ne() {
      return { left: sneLeft(), top: nTop() };
    },
    e: function e() {
      return { left: eLeft(), top: ewTop() };
    },
    se: function se() {
      return { left: sneLeft(), top: sTop() };
    },
    s: function s() {
      return { left: nsLeft(), top: sTop() };
    },
    sw: function sw() {
      return { left: nswLeft(), top: sTop() };
    },
    w: function w() {
      return { left: wLeft(), top: ewTop() };
    },
    nw: function nw() {
      return { left: nswLeft(), top: nTop() };
    }
  };

  return positions[direction]();
};

var isElementInViewport = function isElementInViewport(_ref2) {
  var t = _ref2.top,
      l = _ref2.left,
      width = _ref2.width,
      height = _ref2.height;
  var _window = window,
      pageXOffset = _window.pageXOffset,
      pageYOffset = _window.pageYOffset,
      innerWidth = _window.innerWidth,
      innerHeight = _window.innerHeight;

  var top = t - pageYOffset;
  var left = l - pageXOffset;
  var bottom = pageYOffset + innerHeight - (top + height);
  var right = pageXOffset + innerWidth - (left + width);

  return top > 0 && left > 0 && bottom > 0 && right > 0;
};

var Popover = function (_Component) {
  (0, _inherits3.default)(Popover, _Component);

  function Popover(props) {
    (0, _classCallCheck3.default)(this, Popover);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Popover.__proto__ || (0, _getPrototypeOf2.default)(Popover)).call(this, props));

    _this.onMouseEnter = function () {
      _this.clearTimer();
      _this.setState({ show: true });
    };

    _this.onMouseEnterPopover = function () {
      _this.clearTimer();
    };

    _this.onMouseLeave = function () {
      _this.hidePopover();
    };

    _this.setPopoverDimension = function () {
      var _this$props = _this.props,
          className = _this$props.className,
          style = _this$props.style,
          direction = _this$props.direction,
          theme = _this$props.theme,
          children = _this$props.children,
          rest = (0, _objectWithoutProperties3.default)(_this$props, ['className', 'style', 'direction', 'theme', 'children']);

      var renderContainer = document.createElement('div');
      var classes = _this.getClasses({ direction: direction, theme: theme, className: className });
      var positionStyle = HIDDEN_POSITION;
      var popover = _this.getPopover({
        classes: classes, style: style, positionStyle: positionStyle, children: children, rest: rest
      });

      _this.el.appendChild(renderContainer);

      (0, _reactDom.render)(popover, renderContainer, function () {
        var renderedPopover = (0, _reactDom.findDOMNode)(renderContainer.firstChild);
        var offsetHeight = renderedPopover.offsetHeight,
            offsetWidth = renderedPopover.offsetWidth;


        _this.setState({
          popoverHeight: offsetHeight,
          popoverWidth: offsetWidth
        });
        _this.el.removeChild(renderContainer);
      });
    };

    _this.getPopoverPositionStyle = function (direction) {
      if (!_this.state.show) {
        return {};
      }

      var _this$trigger$getBoun = _this.trigger.getBoundingClientRect(),
          top = _this$trigger$getBoun.top,
          right = _this$trigger$getBoun.right,
          bottom = _this$trigger$getBoun.bottom,
          left = _this$trigger$getBoun.left;

      var _window2 = window,
          scrollX = _window2.pageXOffset,
          scrollY = _window2.pageYOffset;

      var position = getPopoverPosition({
        top: top,
        right: right,
        bottom: bottom,
        left: left,
        scrollX: scrollX,
        scrollY: scrollY,
        direction: direction
      });

      return position;
    };

    _this.clearTimer = function () {
      if (_this.timer) {
        window.clearTimeout(_this.timer);
      }
    };

    _this.hidePopover = function () {
      _this.clearTimer();
      _this.timer = window.setTimeout(function () {
        _this.setState({ show: false });
      }, 100);
    };

    _this.getPopover = function (_ref3) {
      var classes = _ref3.classes,
          style = _ref3.style,
          positionStyle = _ref3.positionStyle,
          children = _ref3.children,
          rest = _ref3.rest;

      return _react2.default.createElement(
        'div',
        (0, _extends3.default)({ className: classes,
          style: (0, _extends3.default)({}, style, positionStyle),
          onMouseEnter: _this.onMouseEnterPopover,
          onMouseLeave: _this.onMouseLeave
        }, rest),
        children
      );
    };

    _this.getClasses = function (_ref4) {
      var _classNames;

      var direction = _ref4.direction,
          theme = _ref4.theme,
          className = _ref4.className;
      return (0, _classnames2.default)((_classNames = {
        popover: true,
        'popover--wrapped': true
      }, (0, _defineProperty3.default)(_classNames, 'popover--' + direction, direction), (0, _defineProperty3.default)(_classNames, 't-' + theme, theme), _classNames), className);
    };

    _this.getDirection = function () {
      var direction = _this.props.direction;
      var _this$state = _this.state,
          show = _this$state.show,
          popoverHeight = _this$state.popoverHeight,
          popoverWidth = _this$state.popoverWidth;

      var regulatePosition = function regulatePosition(_ref5) {
        var t = _ref5.top,
            l = _ref5.left,
            d = _ref5.direction,
            w = _ref5.width,
            h = _ref5.height;

        switch (d) {
          case 'n':
            return { top: t - h, left: l - w / 2 };
          case 'ne':
            return { top: t - h, left: l };
          case 'e':
            return { top: t - h / 2, left: l };
          case 'se':
            return { top: t, left: l };
          case 's':
            return { top: t - h / 2, left: l - w / 2 };
          case 'sw':
            return { top: t - h, left: l - w };
          case 'w':
            return { top: t - h / 2, left: l - w };
          case 'nw':
            return { top: t - h, left: l - w };
          default:
            return { top: t, left: l };
        }
      };
      var popoverInViewport = function popoverInViewport(dir) {
        var _this$getPopoverPosit = _this.getPopoverPositionStyle(dir),
            top = _this$getPopoverPosit.top,
            left = _this$getPopoverPosit.left;

        var _regulatePosition = regulatePosition({
          top: parseInt(top, 10),
          left: parseInt(left, 10),
          height: popoverHeight,
          width: popoverWidth,
          direction: dir
        }),
            t = _regulatePosition.top,
            l = _regulatePosition.left;

        return isElementInViewport({
          top: t,
          left: l,
          height: popoverHeight,
          width: popoverWidth
        });
      };

      if (!(show && popoverHeight && popoverWidth)) {
        return direction;
      }

      if (popoverInViewport(direction)) {
        return direction;
      }

      var orderedDirection = ['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'];
      var index = orderedDirection.indexOf(direction);
      var traverseDirection = orderedDirection.slice(index + 1).concat(orderedDirection.slice(0, index));

      while (traverseDirection.length > 0) {
        var d = traverseDirection.shift();
        if (popoverInViewport(d)) {
          return d;
        }
      }

      return direction;
    };

    _this.showPopover = function () {
      var _this$props2 = _this.props,
          className = _this$props2.className,
          style = _this$props2.style,
          theme = _this$props2.theme,
          children = _this$props2.children,
          rest = (0, _objectWithoutProperties3.default)(_this$props2, ['className', 'style', 'theme', 'children']);

      var direction = _this.getDirection();
      var classes = _this.getClasses({ direction: direction, theme: theme, className: className });
      var positionStyle = _this.getPopoverPositionStyle(direction);
      var popover = _this.getPopover({
        classes: classes, style: style, positionStyle: positionStyle, children: children, rest: rest
      });
      return _reactDom2.default.createPortal(popover, _this.el);
    };

    _this.trigger = null;
    _this.setTriggerRef = function (element) {
      _this.trigger = element;
    };
    _this.state = { show: false };
    return _this;
  }

  (0, _createClass3.default)(Popover, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var containerClass = 'aaui-popover-container';
      var existingContainer = document.getElementsByClassName(containerClass);

      if (existingContainer.length > 0) {
        var _existingContainer = (0, _slicedToArray3.default)(existingContainer, 1);

        this.el = _existingContainer[0];
      } else {
        this.el = document.createElement('div');
        this.el.setAttribute('class', containerClass);
        document.body.appendChild(this.el);
      }
      this.setPopoverDimension();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.clearTimer();
    }
  }, {
    key: 'render',
    value: function render() {
      var show = this.state.show;
      var ariaLabelText = this.props.ariaLabelText;

      return _react2.default.createElement(
        _react.Fragment,
        null,
        _react2.default.createElement('div', {
          tabIndex: 0,
          onMouseEnter: this.onMouseEnter,
          onMouseLeave: this.onMouseLeave,
          onFocus: this.onMouseEnter,
          onBlur: this.onMouseLeave,
          ref: this.setTriggerRef,
          'aria-label': ariaLabelText,
          style: triggerStyle }),
        show && this.showPopover()
      );
    }
  }]);
  return Popover;
}(_react.Component);

Popover.displayName = 'AUIPopover';
Popover.propTypes = propTypes;
Popover.defaultProps = defaultProps;

exports.default = Popover;