'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Alert = require('./Alert');

var _Alert2 = _interopRequireDefault(_Alert);

var _utils = require('../shared/utils');

require('./AlertBar.less');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AlertBar = function (_React$PureComponent) {
  (0, _inherits3.default)(AlertBar, _React$PureComponent);

  function AlertBar() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, AlertBar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AlertBar.__proto__ || (0, _getPrototypeOf2.default)(AlertBar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      show: false
    }, _this.setRef = function (element) {
      _this.element = element;
    }, _this.handleClose = function () {
      _this.setState({
        show: false
      });

      _this.element && _this.element.addEventListener('animationend', function () {
        _this.props.onClose();
      });
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(AlertBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var timeout = this.props.timeout;

      this.animateShow(timeout);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      clearTimeout(this.animationFrame);
      if (this.timer) {
        clearTimeout(this.timer);
      }
    }
  }, {
    key: 'animateShow',
    value: function animateShow(timeout) {
      var _this2 = this;

      this.animationFrame = setTimeout(function () {
        _this2.setState({
          show: true
        });
      });

      if (timeout) {
        this.timer = setTimeout(function () {
          _this2.setState({
            show: false
          });
        }, timeout);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          message = _props.message,
          type = _props.type,
          className = _props.className,
          container = _props.container,
          rest = (0, _objectWithoutProperties3.default)(_props, ['message', 'type', 'className', 'container']);
      var show = this.state.show;

      var classes = (0, _classnames2.default)({
        'alert-bar': true,
        show: show
      }, className);
      var bar = React.createElement(
        'div',
        { className: classes, ref: this.setRef },
        React.createElement(
          _Alert2.default,
          (0, _extends3.default)({}, (0, _utils.omit)(rest, ['timeout']), {
            type: type,
            onClose: this.handleClose }),
          React.createElement(
            'span',
            null,
            message
          )
        )
      );

      return container ? _reactDom2.default.createPortal(bar, container) : bar;
    }
  }]);
  return AlertBar;
}(React.PureComponent);

AlertBar.defaultProps = {
  onClose: _utils.noop
};
exports.default = AlertBar;