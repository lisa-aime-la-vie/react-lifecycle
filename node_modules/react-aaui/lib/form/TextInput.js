'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _injectL10n = require('../shared/injectL10n');

var _injectL10n2 = _interopRequireDefault(_injectL10n);

var _connectForm = require('./connectForm');

var _connectForm2 = _interopRequireDefault(_connectForm);

var _Input = require('../Input');

var _Input2 = _interopRequireDefault(_Input);

var _utils = require('../shared/utils');

var _types = require('./types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = (0, _extends3.default)({}, _types.FormFieldAPIPropTypes);

var TextInput = function (_PureComponent) {
  (0, _inherits3.default)(TextInput, _PureComponent);

  function TextInput() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, TextInput);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TextInput.__proto__ || (0, _getPrototypeOf2.default)(TextInput)).call.apply(_ref, [this].concat(args))), _this), _this.setWrappedComponentInstance = function (input) {
      _this.input = input;
    }, _this.handleValueCommit = function () {
      var _this$props$api = _this.props.api,
          onValidate = _this$props$api.onValidate,
          setValue = _this$props$api.setValue;

      onValidate(_this.input.value && _this.input.value.trim());
      setValue(_this.input.value && _this.input.value.trim());
    }, _this.handleChange = function (e) {
      var _this$props = _this.props,
          setValue = _this$props.api.setValue,
          onChange = _this$props.onChange;


      setValue(e.target.value);
      onChange(e);
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(TextInput, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          placeholder = _props.placeholder,
          l10n = _props.l10n,
          className = _props.className,
          rest = (0, _objectWithoutProperties3.default)(_props, ['placeholder', 'l10n', 'className']);


      return this.props.static ? _react2.default.createElement(
        'span',
        { tabIndex: '0', className: className },
        rest.value
      ) : _react2.default.createElement(_Input2.default, (0, _extends3.default)({
        ref: this.setWrappedComponentInstance,
        type: 'text',
        placeholder: !!placeholder && l10n.formatMessage(placeholder) ? l10n.formatMessage(placeholder) : placeholder,
        className: className
      }, (0, _utils.omit)(rest, ['api', 'l10n', 'rules']), {
        onValueCommit: this.handleValueCommit,
        onChange: this.handleChange }));
    }
  }]);
  return TextInput;
}(_react.PureComponent);

TextInput.displayName = 'TextInput';
TextInput.propTypes = propTypes;
TextInput.defaultProps = {
  onChange: _utils.noop
};
exports.default = (0, _injectL10n2.default)()((0, _connectForm2.default)()(TextInput));