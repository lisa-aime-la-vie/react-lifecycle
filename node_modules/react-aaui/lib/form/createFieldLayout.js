'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _uniqueId = require('lodash/uniqueId');

var _uniqueId2 = _interopRequireDefault(_uniqueId);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _grid = require('../grid');

var _L10nMessage = require('../shared/L10nMessage');

var _L10nMessage2 = _interopRequireDefault(_L10nMessage);

var _types = require('./types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = (0, _extends3.default)({}, _types.FormFieldPropTypes);
var defaultProps = {
  l10nMessageValues: {}
};

var getAriaInvalidChildren = function getAriaInvalidChildren(children, invalid) {
  var ariaInvalidAttr = {};

  if (invalid) {
    ariaInvalidAttr['aria-invalid'] = true;
    ariaInvalidAttr['aria-describedby'] = (0, _uniqueId2.default)('form__validate_');
  }

  var ariaInvalidChildren = _react2.default.Children.map(children, function (child) {
    if (invalid && child.props.id) {
      ariaInvalidAttr['aria-describedby'] = 'form__validate_' + child.props.id;
    }
    return _react2.default.cloneElement(child, ariaInvalidAttr);
  });

  return {
    errorId: ariaInvalidAttr['aria-describedby'],
    ariaInvalidChildren: ariaInvalidChildren
  };
};

exports.default = function (_ref) {
  var _ref$sm = _ref.sm,
      sm = _ref$sm === undefined ? [] : _ref$sm,
      _ref$span = _ref.span,
      span = _ref$span === undefined ? [] : _ref$span,
      _ref$fluid = _ref.fluid,
      fluid = _ref$fluid === undefined ? true : _ref$fluid,
      _ref$gutter = _ref.gutter,
      gutter = _ref$gutter === undefined ? true : _ref$gutter,
      align = _ref.align,
      className = _ref.className;

  var FormFieldLayout = function FormFieldLayout(_ref2) {
    var label = _ref2.label,
        errMsg = _ref2.errMsg,
        required = _ref2.required,
        children = _ref2.children,
        l10nMessageValues = _ref2.l10nMessageValues,
        id = _ref2.id,
        rest = (0, _objectWithoutProperties3.default)(_ref2, ['label', 'errMsg', 'required', 'children', 'l10nMessageValues', 'id']);

    var rowClasses = (0, _classnames2.default)({
      form__group: true,
      'form__group--error': errMsg
    }, className);
    var labelClasses = (0, _classnames2.default)({
      form__label: true,
      'form__label--require': required
    });
    var controlClasses = (0, _classnames2.default)({
      form__control: true,
      'form__control--static': rest.static
    });
    var validateClasses = (0, _classnames2.default)('form__validate');

    var _sm = (0, _slicedToArray3.default)(sm, 3),
        smLabel = _sm[0],
        smControl = _sm[1],
        smValidate = _sm[2];

    var _span = (0, _slicedToArray3.default)(span, 3),
        spanLabel = _span[0],
        spanControl = _span[1],
        spanValidate = _span[2];

    var _getAriaInvalidChildr = getAriaInvalidChildren(children, errMsg),
        ariaInvalidChildren = _getAriaInvalidChildr.ariaInvalidChildren,
        errorId = _getAriaInvalidChildr.errorId;

    return _react2.default.createElement(
      _grid.Row,
      { fluid: fluid, gutter: gutter, align: align, className: rowClasses },
      _react2.default.createElement(
        _grid.Col,
        { sm: smLabel, span: spanLabel, className: labelClasses },
        label && _react2.default.createElement(
          'label',
          { htmlFor: id },
          _react2.default.createElement(_L10nMessage2.default, { id: label })
        )
      ),
      _react2.default.createElement(
        _grid.Col,
        { sm: smControl, span: spanControl, className: controlClasses },
        ariaInvalidChildren
      ),
      !!errMsg && _react2.default.createElement(
        _grid.Col,
        { sm: smValidate, span: spanValidate, className: validateClasses },
        _react2.default.createElement('i', { className: 'icon-times-circle' }),
        _react2.default.createElement(_L10nMessage2.default, { id: errMsg, values: l10nMessageValues, htmlId: errorId })
      )
    );
  };

  FormFieldLayout.propTypes = propTypes;
  FormFieldLayout.defaultProps = defaultProps;

  return FormFieldLayout;
};